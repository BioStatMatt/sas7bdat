% generated by Docutils <http://docutils.sourceforge.net/>
\documentclass[a4paper,english]{article}
\usepackage{fullpage}
\usepackage{fixltx2e} % LaTeX patches, \textsubscript
\usepackage{cmap} % fix search and cut-and-paste in PDF
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{ifthen}
\usepackage{babel}
\usepackage{longtable}
\usepackage{array}
\setlength{\extrarowheight}{2pt}
\newlength{\DUtablewidth} % internal use in tables

%%% Custom LaTeX preamble
% PDF Standard Fonts
\usepackage{mathptmx} % Times
\usepackage[scaled=.90]{helvet}
\usepackage{courier}

%%% User specified packages and stylesheets
\usepackage{Sweave}
%\VignetteIndexEntry{sas7bdat}

%%% Fallback definitions for Docutils-specific commands
% numeric or symbol footnotes with hyperlinks
\providecommand*{\DUfootnotemark}[3]{%
  \raisebox{1em}{\hypertarget{#1}{}}%
  \hyperlink{#2}{\textsuperscript{#3}}%
}
\providecommand{\DUfootnotetext}[4]{%
  \begingroup%
  \renewcommand{\thefootnote}{%
    \protect\raisebox{1em}{\protect\hypertarget{#1}{}}%
    \protect\hyperlink{#2}{#3}}%
  \footnotetext{#4}%
  \endgroup%
}

% hyperlinks:
\ifthenelse{\isundefined{\hypersetup}}{
  \usepackage[unicode,colorlinks=true,linkcolor=blue,urlcolor=blue]{hyperref}
  \urlstyle{same} % normal text font (alternatives: tt, rm, sf)
}{}
\hypersetup{
  pdftitle={SAS7BDAT Database Binary Format},
}

%%% Body
\begin{document}

% Document title
\title{SAS7BDAT Database Binary Format%
  \phantomsection%
  \label{sas7bdat-database-binary-format}}
\author{Matthew S. Shotwell}
\date{}
\maketitle


%___________________________________________________________________________

\section*{Contents%
  \phantomsection%
  \addcontentsline{toc}{section}{Contents}%
  \label{contents}%
}
%
\begin{itemize}

\item \hyperref[introduction]{Introduction}

\item \hyperref[sas7bdat-header]{SAS7BDAT Header}

\item \hyperref[sas7bdat-pages]{SAS7BDAT Pages}

\item \hyperref[sas7bdat-subheaders]{SAS7BDAT Subheaders}

\item \hyperref[sas7bdat-packed-binary-data]{SAS7BDAT Packed Binary Data}

\item \hyperref[platform-differences]{Platform Differences}

\item \hyperref[compression-data]{Compression Data}

\item \hyperref[software-prototype]{Software Prototype}

\item \hyperref[todo]{ToDo}

\end{itemize}


%___________________________________________________________________________

\section*{Introduction%
  \phantomsection%
  \addcontentsline{toc}{section}{Introduction}%
  \label{introduction}%
}

The SAS7BDAT file is a binary database storage file. At the time of this writing, no description of the SAS7BDAT file format is publicly available. Hence, users who wish to read and manipulate these files must obtain a license for the SAS software, or third party software with support for SAS7BDAT files. The purpose of this document is to promote interoperability between SAS and other popular statistical software packages, especially R (\url{http://www.r-project.org/}).

The information below was deduced by examining the contents of many SAS7BDAT databases downloaded freely from internet resources (see \texttt{data/sources.csv}). No guarantee is made regarding its accuracy. No SAS software, nor any other software requiring the purchase of a license was used.

SAS7BDAT files consist of binary encoded data. Data files encoded in this format often have the extension '.sas7bdat'. The name 'SAS7BDAT' is not official, but is used throughout this document to refer to SAS database files formatted according to the descriptions below.

There appear to be significant differences in the SAS7BDAT format across operating systems (see \hyperref[platform-differences]{platform differences}). The format described below applies to the majority of the collection of test files referenced in \texttt{data/sources.csv} directory (i.e. files associated with Microsoft Windows).

The figure below illustrates the overall structure of the SAS7BDAT database. Each file consists of a 1024 byte header, followed by PC pages, each of length PS bytes (PC and PS are shorthand for 'page count' and 'page size' respectively, and are used to denote these quantities throughout this document).:
%
\begin{quote}{\ttfamily \raggedright \noindent
-{}-{}-{}-{}-{}-{}-{}-{}-{}-\\
|~~1024~~|~~header\\
-{}-{}-{}-{}-{}-{}-{}-{}-{}-\\
|~~~PS~~~|~~page~1\\
-{}-{}-{}-{}-{}-{}-{}-{}-{}-\\
|~~~PS~~~|~~page~2\\
-{}-{}-{}-{}-{}-{}-{}-{}-{}-\\
~~~...\\
-{}-{}-{}-{}-{}-{}-{}-{}-{}-\\
|~~~PS~~~|~~page~PC\\
-{}-{}-{}-{}-{}-{}-{}-{}-{}-
}
\end{quote}


%___________________________________________________________________________

\section*{SAS7BDAT Header%
  \phantomsection%
  \addcontentsline{toc}{section}{SAS7BDAT Header}%
  \label{sas7bdat-header}%
}

The SAS7BDAT file header contains a binary file identifier (i.e. a magic number), the dataset name, timestamp, the number pages (PC), their size (PS) and a variety of other values that pertain to the database as a whole. The purpose of many header fields remain unknown, but are likely to include specifications for data compression and encryption, password protection, and dates/times of creation and/or modification. All files encountered encode multi-byte values little-endian (least significant byte first). However, it is typical to specify endianness of multi-byte values in a file header.

The \emph{offset table} below describes the SAS7BDAT file header as a sequence of bytes. Information stored in the table is indexed by its byte offset (first column) in the header and its length (second column) in bytes. Byte lengths having the form '\%n' should read: 'the number of bytes remaining until byte n'. The fourth column gives a short description of the data contained at this address. For example, 'LE uint, page size := PS' indicates that the data stored at the corresponding location is a little-endian unsigned integer representing the page size, which we denote PS. The description \emph{????????????} indicates that the meaning of data stored at the corresponding location is unknown. The third column represents the author's confidence (low, medium, high) in the corresponding offset, length, and description. Each offset table in this document is formatted in a similar fashion. Variables defined in an offset table are sometimes used in subsequent tables.


%___________________________________________________________________________

\subsection*{Header Offset Table%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Header Offset Table}%
  \label{header-offset-table}%
}

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
32
 & 
high
 & 
binary, \hyperref[magic-number]{magic number}
 \\
\hline

32
 & 
3
 & 
low
 & 
\emph{????????????}
 \\
\hline

35
 & 
3
 & 
low
 & 
bitmasks (SAS\_host, SAS\_release)
 \\
\hline

38
 & 
1
 & 
low
 & 
\emph{????????????}
 \\
\hline

39
 & 
1
 & 
low
 & 
ascii, file format version (1-UNIX or 2-WIN)
 \\
\hline

40
 & 
52
 & 
low
 & 
\emph{????????????}
 \\
\hline

92
 & 
64
 & 
high
 & 
ascii, dataset name
 \\
\hline

156
 & 
8
 & 
medium
 & 
ascii, file type
 \\
\hline

164
 & 
16
 & 
high
 & 
2x LE double, timestamp, secs since 1/1/60
 \\
\hline

180
 & 
16
 & 
low
 & 
\emph{????????????}
 \\
\hline

196
 & 
20
 & 
low
 & 
\emph{????????????}
 \\
\hline

200
 & 
4
 & 
high
 & 
LE uint, page size := PS
 \\
\hline

204
 & 
4
 & 
high
 & 
LE uint, page count := PC
 \\
\hline

208
 & 
8
 & 
low
 & 
\emph{????????????}
 \\
\hline

216
 & 
8
 & 
high
 & 
ascii, release
 \\
\hline

224
 & 
8
 & 
high
 & 
ascii, host
 \\
\hline

232
 & 
56
 & 
low
 & 
\emph{????????????}
 \\
\hline

288
 & 
48
 & 
low
 & 
string with timestamps, license?
 \\
\hline

336
 & 
\%1024
 & 
medium
 & 
filler/zeros
 \\
\hline
\end{longtable}

The bitmasks at offsets 35, 36, and 37 appear to hold information regarding the offset of the 'release' and 'host' information. The following table describes the possible polymorphisms, where the first column contains the hex values for bytes 35-37, the second column shows bytes 216-239 ('.' represents a non-ASCII character or '0', 'a' represents an ASCII character), and the third column gives the type of platform data observed there ('WIN\_*' represents various Microsoft Windows types, such as 'WIN\_NT' and 'WIN\_PRO'). Additional data files are needed to investigate this aspect further.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.145\DUtablewidth}|p{0.296\DUtablewidth}|p{0.191\DUtablewidth}|}
\hline
\textbf{%
bytes 35-37
} & \textbf{%
host + release data
} & \textbf{%
platform
} \\
\hline
\endfirsthead
\hline
\textbf{%
bytes 35-37
} & \textbf{%
host + release data
} & \textbf{%
platform
} \\
\hline
\endhead
\multicolumn{3}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

32 22 01
 & 
aaaaaaaaaaaaaaaa........
 & 
WIN\_* and Linux
 \\
\hline

33 22 00
 & 
....aaaaaaaaaaaa........
 & 
WIN
 \\
\hline

33 33 00
 & 
........aaaaaaaaaaaaaaaa
 & 
SunOS
 \\
\hline
\end{longtable}

The byte at offset 39 appears to distinguish the file format type, where '1' indicates that the file was generated on a UNIX-like system, such as Linux or SunOS, and '2' indicates the file was generated on a Microsoft Windows platform.


%___________________________________________________________________________

\subsection*{Magic Number%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Magic Number}%
  \label{magic-number}%
}

The SAS7BDAT magic number is the following 32 byte (hex) sequence.:
%
\begin{quote}{\ttfamily \raggedright \noindent
00~00~00~00~~~00~00~00~00\\
00~00~00~00~~~c2~ea~81~60\\
b3~14~11~cf~~~bd~92~08~00\\
09~c7~31~8c~~~18~1f~10~11
}
\end{quote}


%___________________________________________________________________________

\section*{SAS7BDAT Pages%
  \phantomsection%
  \addcontentsline{toc}{section}{SAS7BDAT Pages}%
  \label{sas7bdat-pages}%
}

Following the SAS7BDAT header are pages of data. Each page can be one of (at least) four types. The first three are those that contain meta-information (e.g. field/column attributes), packed binary data, or a combination of both. These types are denoted 'meta', 'data', and 'mix' respectively. Meta-information is required to correctly interpret the packed binary information. Hence, this information must be parsed first. In test files (see \texttt{data/sources.csv}), pages containing meta-information always precede pages consisting entirely of packed binary data. In some test data files (from a single source), there is a fourth page type (04) which appears to encode additional meta information. This page usually occurs last, and appears to contain amended meta information. It's purpose is unclear.

The \hyperref[page-offset-table]{page offset table} below describes each page type. Byte offsets appended with one of '(meta/mix)', '(mix)', or '(data)' indicate that the corresponding length and description apply only to pages of the listed type.


%___________________________________________________________________________

\subsection*{Page Offset Table%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Page Offset Table}%
  \label{page-offset-table}%
}

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
low
 & 
\emph{????????????} (sometimes repeated)
 \\
\hline

4
 & 
8
 & 
low
 & 
\emph{????????????} (not critical)
 \\
\hline

12
 & 
4
 & 
low
 & 
\emph{????????????} row/col related (not critical)
 \\
\hline

16
 & 
1
 & 
low
 & 
\emph{????????????}
 \\
\hline

17
 & 
1
 & 
low
 & 
LE uint, page type meta/data/mix/? (0/1/2/4)
 \\
\hline

18 (meta/mix)
 & 
2
 & 
low
 & 
\emph{????????????}
 \\
\hline

20 (meta/mix)
 & 
4
 & 
medium
 & 
LE uint, number of \hyperref[subheader-pointers]{subheader pointers} := L
 \\
\hline

24 (meta/mix)
 & 
L*12
 & 
medium
 & 
L \hyperref[subheader-pointers]{subheader pointers}, 24+L*12 := M
 \\
\hline

M  (meta)
 & 
\%PS
 & 
medium
 & 
subheader data
 \\
\hline

M+M\%8   (mix)
 & 
\%PS
 & 
medium
 & 
\hyperref[sas7bdat-packed-binary-data]{SAS7BDAT packed binary data}
 \\
\hline

18 (data)
 & 
4
 & 
medium
 & 
LE uint, page row count
 \\
\hline

24 (data)
 & 
\%PS
 & 
medium
 & 
\hyperref[sas7bdat-packed-binary-data]{SAS7BDAT packed binary data}
 \\
\hline
\end{longtable}

If a page is of type 'meta' or 'mix', data beginning at offset byte 24 are a sequence of L 12-byte \hyperref[subheader-pointers]{subheader pointers}, which point to an offset farther down the page. \hyperref[sas7bdat-subheaders]{SAS7BDAT Subheaders} stored at these offsets hold meta information about the database, including the column names, labels, and types.

If a page is of type 'mix', then \textbf{packed binary data begin at the next 8 byte boundary following the last subheader pointer}. In this case, the data begin at offset 24+L*12 + (24+L*12) \% 8, where '\%' is the modulo operator.

If a page is of type 'data', then packed binary data begin at offset 24.


%___________________________________________________________________________

\subsection*{Subheader Pointers%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Subheader Pointers}%
  \label{subheader-pointers}%
}

The \hyperref[subheader-pointers]{subheader pointers} encode information about the offset and length of subheaders relative to the beginning of the page where the subheader pointer is located. The purpose of the last four bytes of the subheader pointer are uncertain, but may indicate that additional subheader pointers are to be found on the next page, or that the corresponding subheader is not crucial.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
high
 & 
LE uint, offset from page start to subheader
 \\
\hline

4
 & 
4
 & 
high
 & 
LE uint, length of subheader := H
 \\
\hline

8
 & 
1
 & 
low
 & 
LE uint, optional (0/1)?
 \\
\hline

9
 & 
1
 & 
low
 & 
LE uint, continue next page (0/1)?
 \\
\hline

10
 & 
2
 & 
low
 & 
\emph{????????????}
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\section*{SAS7BDAT Subheaders%
  \phantomsection%
  \addcontentsline{toc}{section}{SAS7BDAT Subheaders}%
  \label{sas7bdat-subheaders}%
}

Subheaders contain meta information regarding the SAS7BDAT database, including row and column counts, column names, labels, and types. Each subheader is associated with a four-byte 'signature' that identifies the subheader type, and hence, how it should be parsed.


%___________________________________________________________________________

\subsection*{Row Size Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Row Size Subheader}%
  \label{row-size-subheader}%
}

The \hyperref[row-size-subheader]{row size subheader} holds information about row length (in bytes), their total count, and their count on a page of type 'mix'.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature F7F7F7F7
 \\
\hline

4
 & 
16
 & 
low
 & 
\emph{????????????}
 \\
\hline

20
 & 
4
 & 
medium
 & 
LE uint, row length (in bytes)
 \\
\hline

24
 & 
12
 & 
medium
 & 
LE uint, row count := r (12 bytes?)
 \\
\hline

36
 & 
12
 & 
medium
 & 
LE uint, column count (12 bytes?)
 \\
\hline

48
 & 
4
 & 
low
 & 
\emph{????????????}
 \\
\hline

52
 & 
4
 & 
low
 & 
LE uint, page size?
 \\
\hline

56
 & 
4
 & 
low
 & 
\emph{????????????}
 \\
\hline

60
 & 
4
 & 
medium
 & 
LE uint, max row count on ``mix'' page
 \\
\hline

64
 & 
8
 & 
medium
 & 
sequence of 8 FF, end of header
 \\
\hline

72
 & 
\%H
 & 
low
 & 
filler
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsection*{Column Size Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Column Size Subheader}%
  \label{column-size-subheader}%
}

The \hyperref[column-size-subheader]{column size subheader} holds the column count.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature F6F6F6F6
 \\
\hline

4
 & 
8
 & 
medium
 & 
LE uint, column count := CC
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsection*{Signature 00FCFFFF Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Signature 00FCFFFF Subheader}%
  \label{signature-00fcffff-subheader}%
}

The purpose of the subheader with signature 00FCFFFF is unknown. This subheader might contain pointers to column formatting information relative to the \hyperref[column-text-subheader]{column text subheader}.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature 00FCFFFF
 \\
\hline

4
 & 
\%H
 & 
low
 & 
\emph{????????????}
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsection*{Column Text Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Column Text Subheader}%
  \label{column-text-subheader}%
}

The column text subheader contains all text associated with columns, including the column name, label, and formatting. However, this subheader is not sufficient to parse these information. Other subheaders (e.g. the \hyperref[column-name-subheader]{column name subheader}), which point to specific elements relative to this subheader are also needed.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature FDFFFFFF
 \\
\hline

4
 & 
12
 & 
medium
 & 
LE uint, length of remaining subheader
 \\
\hline

16
 & 
60
 & 
medium
 & 
ascii, proc name that generated data?
 \\
\hline

76
 & 
\%H
 & 
high
 & 
ascii, combined column names, labels, formats
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsection*{Column Name Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Column Name Subheader}%
  \label{column-name-subheader}%
}

The column name subheader contains a sequence of \hyperref[column-name-pointers]{column name pointers} to the offset of each column name \textbf{relative to the `column text subheader`\_}.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature FFFFFFFF
 \\
\hline

4
 & 
8
 & 
medium
 & 
LE uint, length of remaining subheader
 \\
\hline

12
 & 
8*CC
 & 
medium
 & 
\hyperref[column-name-pointers]{column name pointers} (see below)
 \\
\hline

12+8*CC
 & 
8
 & 
medium
 & 
filler
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsubsection*{Column Name Pointers%
  \phantomsection%
  \addcontentsline{toc}{subsubsection}{Column Name Pointers}%
  \label{column-name-pointers}%
}

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
1
 & 
low
 & 
LE uint, offset relative to page 04 subheader
 \\
\hline

0
 & 
1
 & 
low
 & 
\emph{?????????????}
 \\
\hline

2
 & 
2
 & 
medium
 & 
LE uint, column name offset w.r.t. FDFFFFFF
 \\
\hline

4
 & 
2
 & 
medium
 & 
LE uint, column name length
 \\
\hline

6
 & 
2
 & 
low
 & 
binary, zeros
 \\
\hline
\end{longtable}

If the first byte in the column name pointer is 01 (it is usually 00), this indicates that the column name offset is relative to an 'amendment subheader' (i.e. a subheader with the same signature, but found on an amendment page (page type 04).


%___________________________________________________________________________

\subsection*{Column Attributes Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Column Attributes Subheader}%
  \label{column-attributes-subheader}%
}

The column attribute subheader holds information regarding the column offsets within a row, the column widths, and the column types (either numeric or character). The column attribute subheader sometimes occurs more than once (in test data). In these cases, column attributes are applied in the order they are parsed.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature FCFFFFFF
 \\
\hline

4
 & 
8
 & 
medium
 & 
LE uint, length of remaining subheader
 \\
\hline

12
 & 
12*CC
 & 
medium
 & 
\hyperref[column-attributes]{column attributes} (see below)
 \\
\hline

12+12*CC
 & 
8
 & 
medium
 & 
filler
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsubsection*{Column Attributes%
  \phantomsection%
  \addcontentsline{toc}{subsubsection}{Column Attributes}%
  \label{column-attributes}%
}

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
LE uint, column offset in w.r.t. row
 \\
\hline

4
 & 
4
 & 
medium
 & 
LE uint, column width
 \\
\hline

8
 & 
2
 & 
low
 & 
\emph{????????????}
 \\
\hline

10
 & 
2
 & 
medium
 & 
LE uint, column type (01-num, 02-chr)
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\subsection*{Column Label Subheader%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Column Label Subheader}%
  \label{column-label-subheader}%
}

The column label subheader contains a column label pointer to the offset of a column label \textbf{relative to the `column text subheader`\_}. Since the column label subheader only contains information regarding a single column, there are typically as many column label subheaders as columns.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.179\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.563\DUtablewidth}|}
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endfirsthead
\hline
\textbf{%
offset
} & \textbf{%
length
} & \textbf{%
conf.
} & \textbf{%
description
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

0
 & 
4
 & 
medium
 & 
binary, signature FEFBFFFF
 \\
\hline

4
 & 
38
 & 
low
 & 
\emph{????????????}
 \\
\hline

42
 & 
2
 & 
medium
 & 
LE uint, column label offset wrt FDFFFFFF
 \\
\hline

44
 & 
2
 & 
medium
 & 
LE uint, column label length
 \\
\hline

46
 & 
6
 & 
low
 & 
\emph{????????????}
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\section*{SAS7BDAT Packed Binary Data%
  \phantomsection%
  \addcontentsline{toc}{section}{SAS7BDAT Packed Binary Data}%
  \label{sas7bdat-packed-binary-data}%
}

SAS7BDAT packed binary data are stored by rows, where the size of a row (in bytes) is defined by the \hyperref[row-size-subheader]{row size subheader}. When multiple rows occur on a single page, they are immediately adjacent. When a database contains many rows, it is typical that the collection of rows (i.e. their data) is evenly distributed to a number of 'data' pages. However, in test files, no single row's data is broken across two or more pages. A single data row is parsed by interpreting the binary data according to the collection of column attributes contained in the \hyperref[column-attributes-subheader]{column attributes subheader}. Binary data can be interpreted in two ways, as ASCII characters, or as floating point numbers. The column width attribute specifies the number of bytes associated with a column. For character data, this interpretation is straight-forward. For numeric data, interpretation of the column width is more complex.

The common binary representation of floating point numbers has three parts; the sign (s), exponent (e), and mantissa (m). The corresponding floating point number is \texttt{s * m \textasciicircum{} e}. Under the IEEE 754 floating point standard, the sign requires 1 bit, the exponent requires 11, and the mantissa requires 52 bits, for a total of 8 bytes. In SAS7BDAT file, numeric quantities can be 3, 4, 5, 6, 7, or 8 bytes in length. For numeric quantities using less than 8 bytes, some number of bytes are absent from the most significant part of the mantissa. The smaller width mantissa means that the range of possible values is restricted. The table of \hyperref[numeric-binary-formats]{numeric binary formats} below describes how bits are distributed among the six possible column widths in SAS7BDAT files.


%___________________________________________________________________________

\subsection*{Numeric Binary Formats%
  \phantomsection%
  \addcontentsline{toc}{subsection}{Numeric Binary Formats}%
  \label{numeric-binary-formats}%
}

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.110\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.133\DUtablewidth}|}
\hline
\textbf{%
size
} & \textbf{%
24bit
} & \textbf{%
32bit
} & \textbf{%
40bit
} & \textbf{%
48bit
} & \textbf{%
56bit
} & \textbf{%
64bit\DUfootnotemark{id1}{id2}{1}
} \\
\hline
\endfirsthead
\hline
\textbf{%
size
} & \textbf{%
24bit
} & \textbf{%
32bit
} & \textbf{%
40bit
} & \textbf{%
48bit
} & \textbf{%
56bit
} & \textbf{%
64bit\DUfootnotemark{id1}{id2}{1}
} \\
\hline
\endhead
\multicolumn{7}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

bytes
 & 
3
 & 
4
 & 
5
 & 
6
 & 
7
 & 
8
 \\
\hline

sign
 & 
1
 & 
1
 & 
1
 & 
1
 & 
1
 & 
1
 \\
\hline

exponent
 & 
11
 & 
11
 & 
11
 & 
11
 & 
11
 & 
11
 \\
\hline

mantissa
 & 
12
 & 
20
 & 
28
 & 
36
 & 
44
 & 
52
 \\
\hline
\end{longtable}
%
\DUfootnotetext{id2}{id1}{1}{%
Only 64bit is IEEE 754 compliant!
}


%___________________________________________________________________________

\section*{Platform Differences%
  \phantomsection%
  \addcontentsline{toc}{section}{Platform Differences}%
  \label{platform-differences}%
}

The test files referenced in \texttt{data/sources.csv} were examined over a period of time. Files with non-Microsoft Windows markings were only observed late into the writing of this document. Consequently (but not intentionally), the SAS7BDAT description above is specific to SAS datasets generated on the most commonly observed platform: Microsoft Windows. The format of SAS7BDAT files generated on other platforms are formatted differently.

In particular, the files \texttt{natlerr1944.sas7bdat}, \texttt{natlerr2006.sas7bdat} appear to be generated on the 'SunOS' platform. The header in these files appear to be 8196 bytes, rather than the 1024 seen on Microsoft Windows platforms.

The files \texttt{cfrance2.sas7bdat}, \texttt{cfrance.sas7bdat}, \texttt{coutline.sas7bdat},  \texttt{gfrance2.sas7bdat}, \texttt{gfrance.sas7bdat}, \texttt{goutline.sas7bdat}, \texttt{xfrance2.sas7bdat}, \texttt{xfrance.sas7bdat}, \texttt{xoutline.sas7bdat} appear to be generated on a 'Linux' system.


%___________________________________________________________________________

\section*{Compression Data%
  \phantomsection%
  \addcontentsline{toc}{section}{Compression Data}%
  \label{compression-data}%
}

The table below presents the results of compression tests on a collection of 142 SAS7BDAT data files (sources in \texttt{data/}). The 'type' field represents the type of compression, 'ctime' is the compression time (in seconds), 'dtime' is the decompression time, and the 'compression ratio' field holds the cumulative disk usage (in megabytes) before and after compression. Although the \texttt{xz} algorithm requires significantly more time to compress these data, the decompression time is on par with gzip.

\leavevmode
\setlength{\DUtablewidth}{\linewidth}
\begin{longtable}[c]{|p{0.168\DUtablewidth}|p{0.086\DUtablewidth}|p{0.086\DUtablewidth}|p{0.307\DUtablewidth}|}
\hline
\textbf{%
type
} & \textbf{%
ctime
} & \textbf{%
dtime
} & \textbf{%
compression ratio
} \\
\hline
\endfirsthead
\hline
\textbf{%
type
} & \textbf{%
ctime
} & \textbf{%
dtime
} & \textbf{%
compression ratio
} \\
\hline
\endhead
\multicolumn{4}{c}{\hfill ... continued on next page} \\
\endfoot
\endlastfoot

gzip -9
 & 
76.7s
 & 
2.6s
 & 
541M / 30.3M = 17.9
 \\
\hline

bzip2 -9
 & 
92.7s
 & 
11.2s
 & 
541M / 19.0M = 28.5
 \\
\hline

xz -9
 & 
434.2s
 & 
2.7s
 & 
541M / 12.8M = 42.3
 \\
\hline
\end{longtable}


%___________________________________________________________________________

\section*{Software Prototype%
  \phantomsection%
  \addcontentsline{toc}{section}{Software Prototype}%
  \label{software-prototype}%
}

The prototype program for reading SAS7BDAT formatted files is implemented entirely in R (see file \texttt{src/sas7bdat.R}). Files not recognized as having been generated under a Microsoft Windows platform are rejected (for now). Implementation of the \texttt{read.sas7bdat} function should be considered a 'reference implementation', and not one designed with performance in mind.

There are certain advantages and disadvantages to developing a prototype of this nature in R.

Advantages:
\newcounter{listcnt0}
\begin{list}{\arabic{listcnt0}.}
{
\usecounter{listcnt0}
\setlength{\rightmargin}{\leftmargin}
}

\item R is an interpreted language with built-in debugger. Hence, experimental routines may be implemented and debugged quickly and interactively, without the need of external compiler or debugger tools (e.g. gcc, gdb).

\item R programs are portable across a variety of computing platforms. This is especially important in the present context, because manipulating files stored on disk is a platform-specific task. Platform-specific operations are abstracted from the R user.
\end{list}

Disadvantages:
\setcounter{listcnt0}{0}
\begin{list}{\arabic{listcnt0}.}
{
\usecounter{listcnt0}
\setlength{\rightmargin}{\leftmargin}
}

\item Manipulating binary (raw) data in R is a relatively new capability. The best tools and practices for binary data operations are not as developed as those for other data types.

\item Interpreted code is often much less efficient than compiled code. This is not major disadvantage for prototype implementations because human code development is far less efficient than the R interpreter. Gains made in efficient code development using an interpreted language far outweigh benefit of compiled languages.
\end{list}


%___________________________________________________________________________

\section*{ToDo%
  \phantomsection%
  \addcontentsline{toc}{section}{ToDo}%
  \label{todo}%
}
%
\begin{itemize}

\item experiment further with 'amendment page' concept

\item consider header bytes -by- SAS\_host

\item check that only one page of type ``mix'' is observed. If so insert ``In all test cases (\texttt{data/sources.csv}), there are exactly zero or one pages of type 'mix'.'' under the \hyperref[page-offset-table]{Page Offset Table} header.

\item identify all missing value representations: missing numeric values appear to be represented as '0000000000D1FFFF' (nan) for numeric 'double' quantities.

\item identify purpose of subheader 00FCFFFF

\item identify purpose of unknown header quantities

\item determine other bytes in subheader with signature FEFBFFFF

\item can SAS7BDAT files use non-ASCII encoding?

\item identify SAS7BDAT compression and encryption methods (this is not the same as 'cracking', or breaking encryption): data files may be compressed using the RLE (CHAR) and RDC (BINARY) algorithms.

\end{itemize}

\end{document}
